
------
# 啟動 ngrok，轉發本地 3000 端口
ngrok http 3000

# 列出 src 目錄下的所有文件 
find src > src1.txt

# 執行 fetch
ts-node --esm src/lambda/fetchNews.ts
npx tsx src/lambda/fetchNews.ts
npx tsx src/lambda/fetchAnnouncement.ts
ts-node src/lambda/fetchSolutions.ts
npx ts-node src/lambda/fetchArchitecture.ts

# 執行 update
ts-node --esm src/lambda/updateNews.ts
ts-node src/lambda/updateAnnouncement.ts
ts-node src/lambda/updateSolutions.ts
npx ts-node src/lambda/updateArchitecture.ts

根據當前代碼的模式製作 
knowledge 知識中心

------
UI介面、外觀、整體佈局、風格、間距、排版進行優化，要專業、人性化、完整
一致風格、舒適
更好的用戶體驗和更清晰的視覺引導，同時保留所有功能，其餘不變

將這些檔案合併成一個通用的處理器

考慮到這些文件的邏輯完全相同，您可以考慮將共同的邏輯抽取到一個共用的函數中，
只需傳入不同的表名作為參數，這樣可以減少代碼重複，提高維護性。
--------
修改模組：  
Type // 類型
pages/index // 頁面
│   │ useNewsPageLogic.ts     // Hook
│   │ useFetchNews.ts         
│   │ useNewsFavorites.ts     
│   │     summary.ts          // api
│   │     addFavorite.ts      
│   │     removeFavorite.ts  
│   │     index.ts           
│   │     getFavorites.ts    
src/lambda/fetch
src/lambda/update
src/hooks/profile/useProfileArticles.ts // 觀看紀錄
src/pages/api/notifications/index.ts // 通知介面
src/components/common/Notification.tsx // 通知介面
--------
進行中：
1. 完成architecture知識庫文章 ＆ 爬文
--------
已執行：
1. Navbar 的其他資源暫時隱藏 
--------
待執行：
1. 全部改為響應式設計 
2. 製作收藏文章頁面
3. metaage郵箱 沒有收到 刪除帳號的通知
4. Navbar 的排版、佈局調整一致
5. 載入頁面loader要一致，修改全局的loader，改使用最新新聞的loader樣式
6. 把env環境變數儲存在secure manager
7. 版本歷史的位置要放哪
8. 當Navbar鈴鐺被點擊時 未讀數量會暫時消失
9. 觀看紀錄的標籤顏色要和 Navbar 通知介面的標籤顏色一致
10. 整合成只使用一個爬蟲檔案就好 
11. 使用 crontab（Linux/Mac）定期執行爬蟲
12. 最新公告search無法搜尋文章
13. 架構圖爬取文章不要取得 HTML | PDF
14. 解決方案爬取文章 不要取得Browse Popular Solutions的文章
15. 把所有重複的佈局 樣式 統一 一致