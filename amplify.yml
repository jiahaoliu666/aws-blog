version: 1
applications:
  - frontend:
      phases:
        preBuild:
          commands:
            - nvm use 18.18.2
            - npm install -g npm@9.6.7
            - npm install rimraf --global
            - npm cache verify
            - rm -rf node_modules
            - rm -rf .next
            - npm ci --legacy-peer-deps
            - npm install next@14.2.15 --save --legacy-peer-deps
            - touch .env.production
            - 'echo "NODE_ENV=production" >> .env.production'
            - 'env | grep -e AWS_ -e NEXT_PUBLIC_AWS_ >> .env.production || true'
            - 'env | grep -e NEXT_PUBLIC_COGNITO_ >> .env.production || true'
            - 'env | grep -e DYNAMODB_ >> .env.production || true'
            - 'env | grep -e USER_UPLOADS_BUCKET -e AWS_BLOG_FEEDBACK_BUCKET >> .env.production || true'
            - 'env | grep -e GMAIL_ -e SES_ -e NEXT_PUBLIC_SES_ >> .env.production || true'
            - 'env | grep -e NEXT_PUBLIC_LINE_ >> .env.production || true'
            - 'env | grep -e DISCORD_ >> .env.production || true'
            - 'if [ ! -s .env.production ]; then echo "Warning: env file is empty but continuing build"; fi'
        build:
          commands:
            - NODE_OPTIONS="--max_old_space_size=4096" npm run build
            - 'if [ ! -d ".next" ]; then exit 1; fi'
            - 'if [ ! -f ".next/BUILD_ID" ]; then exit 1; fi'
      artifacts:
        baseDirectory: .next
        files:
          - '**/*'
      cache:
        paths:
          - node_modules/**/*
          - .next/cache/**/*
    appRoot: . 