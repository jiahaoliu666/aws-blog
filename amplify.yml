version: 1
frontend:
  phases:
    preBuild:
      commands:
        - 'echo "Setting up build environment"'
        - "nvm use 18.18.2 || nvm install 18.18.2"
        - 'echo "Node $(node -v) and NPM $(npm -v)"'
        - "rm -rf node_modules .next"
        - "npm cache clean --force"
        - "npm install -g npm@9.6.7"
        - "npm config set engine-strict false"
        - "npm config set legacy-peer-deps true"
        - "npm config set fetch-retry-maxtimeout 600000"
        - "npm config set fetch-timeout 600000"
        - "npm config set registry https://registry.npmjs.org/"
        - |
          echo "Creating .npmrc file"
          cat > .npmrc << EOL
          legacy-peer-deps=true
          strict-ssl=false
          puppeteer_skip_chromium_download=true
          EOL
        - "npm ci --prefer-offline --no-audit || npm install --legacy-peer-deps --no-audit"
        - |
          echo "Fetching parameters from SSM Parameter Store"
          # 使用 AWS CLI 直接獲取參數
          PARAMS=$(aws ssm get-parameters-by-path \
            --path "/amplify/shared/d9wn57zpaq1gh/" \
            --recursive \
            --with-decryption \
            --region ap-northeast-1 \
            --output text \
            --query "Parameters[].[Name,Value]")

          # 創建 .env.production 文件
          echo "Creating .env.production file"
          echo "NODE_ENV=production" > .env.production

          # 處理參數並寫入 .env.production
          echo "$PARAMS" | while read -r NAME VALUE; do
            # 提取參數名稱（移除路徑前綴）
            PARAM_NAME=$(echo "$NAME" | sed 's/.*d9wn57zpaq1gh\///')
            echo "Setting parameter: $PARAM_NAME"
            # 寫入環境變數到 .env.production
            echo "$PARAM_NAME=$VALUE" >> .env.production
          done

          # 顯示環境變數（用於調試）
          echo "Environment variables set:"
          cat .env.production | grep -v "PASS\|KEY\|SECRET"
    build:
      commands:
        - |
          echo "Starting build process with following environment:"
          echo "NODE_ENV: $NODE_ENV"
        - 'export NODE_OPTIONS="--max_old_space_size=4096"'
        - "export NODE_ENV=production"
        - "export CI=true"
        - |
          if npm run build; then
            echo "Build completed successfully"
          else
            echo "Build failed"
            if [ -f ".next/error.log" ]; then
              cat .next/error.log
            fi
            exit 1
          fi
    postBuild:
      commands:
        - |
          if [ ! -d ".next" ]; then
            echo "Build failed: .next directory not found"
            exit 1
          fi
        - |
          if [ -f ".next/error.log" ]; then
            echo "Build warnings/errors found:"
            cat .next/error.log
          fi
        - 'echo "Build completed successfully"'
  artifacts:
    baseDirectory: .next
    files:
      - "**/*"
  cache:
    paths:
      - node_modules/.cache/**/*
