


aws amplify gen 2

在next.js專案中 建立next pages router

建立目錄結構

AWS 服務連接到後端
amplify Authentication
amplify Storage
amplify Data

第三方服務
OpenAI API
discord
line

--------

需求是從 0 開始建立一個完整的 AWS Amplify Gen 2 與 Next.js 專案，實現以下功能：

AWS Amplify 基本設置：

初始化 AWS Amplify Gen 2 項目，並整合到一個新建的 Next.js 項目中。
配置與後端的 AWS 服務集成（包括身份驗證、文件存儲以及數據 API）。

Amplify Authentication：

在專案中整合用戶身份驗證，包括：
註冊、登錄的基本功能頁。

Amplify Storage：

配置 S3 文件存儲，用於文件（例如圖像）上傳與管理。

Amplify Data (API 與數據庫)：

實現與 GraphQL 或 REST API 的交互，並與 DynamoDB 數據庫集成。

OpenAI API 整合：

使用 OpenAI GPT 模型實現一些應用邏輯（如完成對話生成、內容檢測等任務）。

Discord 整合：

通過 Discord dm.sendmessage 自動向用戶發送通知（或訊息）。

Line 與 Messaging API：

創建流程，展示如何與 Line 官方 API 進行通信：
設置 Webhook，接收用戶信息。
發送消息給指定用戶或群組，展示基本的互動功能。

上述需求的主要目的是通過 AWS 和第三方服務構建出一個功能強大的 Next.js 應用

所有回覆都要依照amplify gen 2 的官方文檔的內容回應
https://docs.amplify.aws/nextjs/

另外幫我生成符合此需求專案的目錄結構

--------

├── amplify/  
│   ├── backend/               # 後端服務定義，包括auth、storage、api等模塊  
│   ├── #current-cloud-backend/  
│   └── amplify-config.json    # Amplify 設置檔案  
├── components/  
│   ├── Auth/  
│   │   ├── LoginForm.tsx      # 登錄頁面組件  
│   │   └── SignUpForm.tsx     # 註冊頁面組件  
│   ├── FileUpload.tsx         # 文件上傳組件  
│   └── MessageList.tsx        # 消息列表展示組件  
├── pages/  
│   ├── api/  
│   │   ├── auth/              # 自定義身份驗證 API  
│   │   ├── file-upload/  
│   │   │   └── upload.ts      # 文件上傳相關的 API route  
│   │   ├── discord/  
│   │   │   └── notify.ts      # 發送 Discord 訊息的 API route  
│   │   ├── line/  
│   │   │   └── webhook.ts     # Line Webhook API route  
│   │   └── openai/  
│   │       └── generate.ts    # OpenAI API 集成請求  
│   ├── index.tsx              # 首頁  
│   ├── dashboard.tsx          # 只有登入用戶可見的 Dashboard  
│   ├── files.tsx              # 文件管理頁面  
│   ├── chat.tsx               # 使用 OpenAI GPT 的聊天頁  
│   └── notifications.tsx      # 用於展示 Discord 與 Line 訊息通知  
├── graphql/  
│   └── schema.graphql         # GraphQL schema 定義  
├── styles/  
│   ├── globals.css            # 全局樣式  
│   └── theme.css              # 主題樣式  
├── .env.local                 # 環境變量文件（包含 API 金鑰等敏感設定）  
├── amplify-config.json        # Amplify 初始化配置檔案  
├── next.config.js             # Next.js 配置文件  
├── package.json               # 項目依賴與腳本  
└── README.md                  # 專案描述與啟動步驟


--------

amplify/                          # Amplify 後端資源  
├── backend/                      # Amplify 後端功能  
│   ├── api/                      # GraphQL 或 REST API 配置  
│   │   └── schema.graphql        # GraphQL schema 定義  
│   ├── auth/                     # Cognito 身份驗證配置  
│   ├── storage/                  # S3 文件存儲配置  
│   ├── function/                 # Lambda 函數  
│   │   ├── fetchNews/            # 獲取新聞 Lambda  
│   │   ├── fetchAnnouncement/    # 獲取公告 Lambda  
│   │   ├── updateContent/        # 更新內容 Lambda  
│   │   └── sendNotification/     # 發送通知 Lambda  
│   └── custom/                   # 自定義後端資源  
│       └── dynamodb/             # DynamoDB 表配置  
├── #current-cloud-backend/       # 當前雲端後端配置（自動生成）  
└── amplify-config.json           # Amplify 配置檔案  

src/                              # 前端資源  
├── pages/                        # Next.js 頁面  
│   ├── _app.tsx                  # 應用程序入口  
│   ├── index.tsx                 # 首頁  
│   ├── announcement/             # 最新公告頁面  
│   │   └── index.tsx             # 公告列表頁  
│   ├── news/                     # 最新新聞頁面  
│   │   └── index.tsx             # 新聞列表頁  
│   ├── solutions/                # 解決方案頁面  
│   │   └── index.tsx             # 解決方案列表頁  
│   ├── profile/                  # 個人資料頁面  
│   │   ├── index.tsx             # 個人資料首頁  
│   │   ├── settings.tsx          # 個人設定頁  
│   │   └── history.tsx           # 歷史紀錄頁  
│   ├── auth/                     # 認證相關頁面  
│   │   ├── login.tsx             # 登入頁面  
│   │   ├── register.tsx          # 註冊頁面  
│   │   └── forgot-password.tsx   # 忘記密碼頁面  
│   └── api/                      # API Routes  
│       ├── latest-articles.ts    # 獲取最新文章的 API  
│       ├── notifications.ts      # 通知相關 API  
│       ├── line.ts               # LINE Webhook API  
│       └── discord.ts            # Discord Webhook API  
├── components/                   # React 組件  
│   ├── common/                   # 通用組件  
│   │   ├── Navbar.tsx            # 導航欄  
│   │   ├── Footer.tsx            # 頁腳  
│   │   ├── Card.tsx              # 卡片組件  
│   │   ├── Pagination.tsx        # 分頁組件  
│   │   └── Toast.tsx             # Toast 通知組件  
│   ├── profile/                  # 個人資料頁面組件  
│   │   ├── ProfileCard.tsx       # 個人資料卡片  
│   │   ├── SettingsForm.tsx      # 設定表單  
│   │   └── HistoryList.tsx       # 歷史紀錄列表  
│   └── notifications/            # 通知相關組件  
│       └── NotificationBell.tsx  # 通知鈴鐺  
├── hooks/                        # 自定義 Hook  
│   ├── useAuth.ts                # 認證 Hook  
│   ├── useFetch.ts               # 資料獲取 Hook  
│   ├── useToast.ts               # Toast 通知 Hook  
│   └── useProfile.ts             # 個人資料相關 Hook  
├── context/                      # 上下文  
│   ├── AuthContext.tsx           # 認證上下文  
│   ├── ToastContext.tsx          # Toast 通知上下文  
│   └── AppContext.tsx            # 全局應用上下文  
├── services/                     # 業務邏輯與服務  
│   ├── aws/                      # AWS 相關服務  
│   │   ├── s3.ts                 # S3 文件存儲服務  
│   │   ├── cognito.ts            # Cognito 身份驗證服務  
│   │   ├── dynamodb.ts           # DynamoDB 服務  
│   │   └── lambda.ts             # Lambda 函數調用  
│   ├── line.ts                   # LINE 服務  
│   ├── discord.ts                # Discord 服務  
│   └── notificationService.ts    # 通知服務  
├── styles/                       # 樣式  
│   ├── globals.css               # 全局樣式  
│   └── theme.css                 # 主題樣式  
├── config/                       # 配置檔案  
│   ├── aws.ts                    # AWS 配置  
│   ├── line.ts                   # LINE 配置  
│   ├── discord.ts                # Discord 配置  
│   └── constants.ts              # 常量  
├── types/                        # 類型定義  
│   ├── announcementType.ts       # 公告類型  
│   ├── userType.ts               # 用戶類型  
│   ├── notificationType.ts       # 通知類型  
│   └── env.d.ts                  # 環境變量類型  
├── utils/                        # 工具函數  
│   ├── errorHandler.ts           # 錯誤處理工具  
│   ├── dateUtils.ts              # 日期工具  
│   ├── logger.ts                 # 日誌工具  
│   └── retryUtils.ts             # 重試工具  
├── libs/                         # 第三方庫封裝  
│   └── dynamodb.ts               # DynamoDB 庫封裝  
└── README.md                     # 專案說明